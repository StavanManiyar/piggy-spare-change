import { createClient } from '@supabase/supabase-js'

// Supabase project credentials
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseAnonKey) {
  throw new Error('Missing Supabase environment variables')
}

export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// Auth helper functions
export const auth = {
  signUp: (email: string, password: string) => 
    supabase.auth.signUp({ email, password }),
  
  signIn: (email: string, password: string) => 
    supabase.auth.signInWithPassword({ email, password }),
  
  signOut: () => 
    supabase.auth.signOut(),
  
  getUser: () => 
    supabase.auth.getUser(),
  
  onAuthStateChange: (callback: (event: string, session: any) => void) =>
    supabase.auth.onAuthStateChange(callback)
}

// Database Types (Auto-generated by Supabase CLI)
export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string
          email: string
          full_name: string | null
          phone: string | null
          kyc_status: 'pending' | 'verified' | 'rejected'
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          email: string
          full_name?: string | null
          phone?: string | null
          kyc_status?: 'pending' | 'verified' | 'rejected'
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          phone?: string | null
          kyc_status?: 'pending' | 'verified' | 'rejected'
          created_at?: string
          updated_at?: string
        }
      }
      user_settings: {
        Row: {
          id: string
          user_id: string
          round_to_nearest: number
          min_roundup: number
          max_roundup: number
          portfolio_preset: 'safe' | 'balanced' | 'growth'
          auto_invest_enabled: boolean
          weekly_target: number
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          round_to_nearest?: number
          min_roundup?: number
          max_roundup?: number
          portfolio_preset?: 'safe' | 'balanced' | 'growth'
          auto_invest_enabled?: boolean
          weekly_target?: number
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          round_to_nearest?: number
          min_roundup?: number
          max_roundup?: number
          portfolio_preset?: 'safe' | 'balanced' | 'growth'
          auto_invest_enabled?: boolean
          weekly_target?: number
          created_at?: string
          updated_at?: string
        }
      }
      transactions: {
        Row: {
          id: string
          user_id: string
          amount: number
          direction: 'debit' | 'credit'
          merchant: string | null
          category: string | null
          upi_ref: string | null
          status: 'pending' | 'completed' | 'failed'
          timestamp: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          amount: number
          direction: 'debit' | 'credit'
          merchant?: string | null
          category?: string | null
          upi_ref?: string | null
          status?: 'pending' | 'completed' | 'failed'
          timestamp?: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          amount?: number
          direction?: 'debit' | 'credit'
          merchant?: string | null
          category?: string | null
          upi_ref?: string | null
          status?: 'pending' | 'completed' | 'failed'
          timestamp?: string
          created_at?: string
        }
      }
      piggy_ledger: {
        Row: {
          id: string
          user_id: string
          amount: number
          type: 'roundup_credit' | 'manual_topup' | 'investment_debit'
          reference: string | null
          transaction_id: string | null
          order_id: string | null
          timestamp: string
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          amount: number
          type: 'roundup_credit' | 'manual_topup' | 'investment_debit'
          reference?: string | null
          transaction_id?: string | null
          order_id?: string | null
          timestamp?: string
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          amount?: number
          type?: 'roundup_credit' | 'manual_topup' | 'investment_debit'
          reference?: string | null
          transaction_id?: string | null
          order_id?: string | null
          timestamp?: string
          created_at?: string
        }
      }
      orders: {
        Row: {
          id: string
          user_id: string
          side: 'buy' | 'sell'
          symbol: string
          quantity: number
          amount: number
          price: number
          status: 'pending' | 'filled' | 'failed' | 'cancelled'
          broker_order_id: string | null
          timestamp: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          side: 'buy' | 'sell'
          symbol: string
          quantity: number
          amount: number
          price: number
          status?: 'pending' | 'filled' | 'failed' | 'cancelled'
          broker_order_id?: string | null
          timestamp?: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          side?: 'buy' | 'sell'
          symbol?: string
          quantity?: number
          amount?: number
          price?: number
          status?: 'pending' | 'filled' | 'failed' | 'cancelled'
          broker_order_id?: string | null
          timestamp?: string
          created_at?: string
          updated_at?: string
        }
      }
      holdings: {
        Row: {
          id: string
          user_id: string
          symbol: string
          units: number
          avg_cost: number
          current_price: number
          current_value: number
          last_updated: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          symbol: string
          units: number
          avg_cost: number
          current_price: number
          current_value: number
          last_updated?: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          symbol?: string
          units?: number
          avg_cost?: number
          current_price?: number
          current_value?: number
          last_updated?: string
          created_at?: string
          updated_at?: string
        }
      }
      prices: {
        Row: {
          id: string
          symbol: string
          price: number
          change: number
          change_percent: number
          volume: number | null
          timestamp: string
          created_at: string
        }
        Insert: {
          id?: string
          symbol: string
          price: number
          change?: number
          change_percent?: number
          volume?: number | null
          timestamp?: string
          created_at?: string
        }
        Update: {
          id?: string
          symbol?: string
          price?: number
          change?: number
          change_percent?: number
          volume?: number | null
          timestamp?: string
          created_at?: string
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
  }
}
